name: Bacula SD

on:
  push:
    branches:
      - "*"
    tags:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-image:
    name: Build and Publish Registry Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Extract Version Information
        id: extract_hash
        run: |
          echo BUILD_HASH=$(git describe --abbrev=8 --always --tags --dirty) >> $GITHUB_ENV

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

      - name: Get a Docker-ready tag
        id: docker-tag
        run: |
          # Get lowercase repo and actor names
          REPO_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print tolower($2)}')
          ACTOR_NAME=$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]')
          BRANCH_NAME=$(echo "${{ steps.branch-name.outputs.current_branch }}" | sed 's/[^a-zA-Z0-9]/-/g; s/[A-Z]/\L&/g')

          # Build Docker tag
          echo "CUSTOM_TAG=${{ env.REGISTRY }}/${ACTOR_NAME}/${REPO_NAME}:${BRANCH_NAME}" >> $GITHUB_ENV

          # Debug output
          echo "Generated Tag: ${{ env.CUSTOM_TAG }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            GIT_COMMIT=${{ env.BUILD_HASH }}
            DEBUG=False
          tags: ${{ env.CUSTOM_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
